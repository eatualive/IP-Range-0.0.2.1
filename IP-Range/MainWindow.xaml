<Window x:Class="IP_Range.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IP_Range"
        mc:Ignorable="d"
        Title="IP-Range"
        Height="650"
        Width="1200"
        MinHeight="440"
        MinWidth="720"
        BorderThickness="1"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        StateChanged="Window_StateChanged"
        Loaded="Window_Loaded">
    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="36" ResizeBorderThickness="6" GlassFrameThickness="1"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    
    <Window.Resources>
        <Style  TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border
                                Background="{StaticResource brushBackground}"
                                BorderThickness="1"
                                BorderBrush="{StaticResource brushBorders}"
                                >
                            <StackPanel IsItemsHost="true"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="{StaticResource brushForegroundTopPanel}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="miBorder"
                                Background="Transparent"
                                MinWidth="150"
                                Height="40">
                            <ContentPresenter ContentSource="Header"
                                              VerticalAlignment="Center"
                                              Margin="20,0,20,0"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource brushButtonMouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource brushButtonMousePressed}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize"
                                                             To="10"
                                                             Duration="0:0:0:0.1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize"
                                                             To="11"
                                                             Duration="0:0:0:0.1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="Transparent">
                            <Path x:Name="ExpandPath"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Stroke="Violet"
                                                  StrokeThickness="2"
                                                  Data="M 4 0 L 8 4 L 4 8"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 4 8 L 8 4"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TreeView}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border" BorderThickness="0" Background="Transparent">
                            <ScrollViewer Focusable="False" CanContentScroll="False" Padding="0,0,0,20">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource brushForeground}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <local:LeftMarginMultiplierConverter Length="30" x:Key="lengthConverter" />
                        </ControlTemplate.Resources>

                        <StackPanel>
                            <Border x:Name="Bd"
                                    BorderBrush="{StaticResource brushBorders}"
                                    BorderThickness="0,0,0,1"
                                    Padding="{TemplateBinding Padding}"
                                    MouseRightButtonDown="Bd_MouseRightButtonDown"
                                    >
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="{StaticResource brushNotSelected}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem x:Name="AddSubContainer" Header="ADD..." Click="MenuItem_Click"/>
                                        <MenuItem x:Name="EditContainer" Header="EDIT..." Click="MenuItem_Click"/>
                                        <MenuItem x:Name="RemoveContainer" Header="REMOVE..." Click="MenuItem_Click"/>
                                    </ContextMenu>
                                </Border.ContextMenu>

                                <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton x:Name="Expander"
                                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      ClickMode="Press"/>
                                    <ContentPresenter x:Name="PART_Header"
                                                                      Grid.Column="1"
                                                                      ContentSource="Header"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource brushSelectedTreeView}"/>
                                <Setter Property="Foreground" Value="{StaticResource brushForeground}"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource brushNotSelected}"/>
                                <Setter Property="Foreground" Value="{StaticResource brushForeground}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Name="MainGrid" Background="{StaticResource brushBackground}">
        <DockPanel>

            <Grid x:Name="TopPanel"
                      DockPanel.Dock="Top"
                      Background="{StaticResource brushBackgroundTopPanel}" Panel.ZIndex="1">
                <Grid.Effect>
                    <DropShadowEffect Opacity="1" ShadowDepth="1" BlurRadius="6"/>
                </Grid.Effect>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource brushForegroundTopPanel}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Width="{TemplateBinding Width}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource brushButtonMouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource brushButtonMousePressed}"/>

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize"
                                                                                            To="11"
                                                                                            Duration="0:0:0:0.1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize"
                                                                                            To="12"
                                                                                            Duration="0:0:0:0.1">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>

                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <StackPanel x:Name="Window_Controls"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Height="30">

                    <Button x:Name="btnAbout" Content="ABOUT" Width="70"/>
                    <Button x:Name="btnSettings" Content="SETTINGS" Width="70"/>

                    <Button x:Name="btnMinimize"
                                Width="47"
                                HorizontalAlignment="Left"
                                BorderThickness="0"
                                Click="btnMinimize_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource brushForegroundTopPanel}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF555555"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#FF292929"/>
                                        <Setter Property="Foreground" Value="#FF575757"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Border Width="10" SnapsToDevicePixels="True" BorderThickness="0,1,0,0" BorderBrush="{Binding Foreground, ElementName=btnMinimize}"/>
                    </Button>

                    <Button x:Name="btnMaximize"
                                Width="47"
                                HorizontalAlignment="Left"
                                BorderThickness="0"
                                Click="WindowFullScreen">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource brushForegroundTopPanel}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF555555"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#FF292929"/>
                                        <Setter Property="Foreground" Value="#FF575757"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{Binding Foreground, ElementName=btnMaximize}" Width="10" Height="10"/>
                    </Button>

                    <Button x:Name="btnClose"
                                Width="47"
                                HorizontalAlignment="Right"
                                Click="btnClose_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource brushForegroundTopPanel}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFE81123"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#FFE0636E"/>
                                        <Setter Property="Foreground" Value="#FF2B2B2B"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Path Data="M 0 0 L 10 10 Z M 10 0 L 0 10 Z"
                      SnapsToDevicePixels="True"
                      Stroke="{Binding Foreground, ElementName=btnClose}"
                      StrokeMiterLimit="0"
                      Stretch="Uniform"
                      Width="10"
                      Height="10"/>
                    </Button>

                </StackPanel>

                <Border Grid.Row="1"
                        BorderBrush="{StaticResource brushBorders}"
                        BorderThickness="0,0,0,1"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Height="45">
                    <StackPanel Orientation="Horizontal">

                        <Button x:Name="btnCreate" Content="NEW..." Width="100"/>
                        <Button x:Name="btnOpen" Content="OPEN..." Width="100"/>
                        <Button x:Name="btnSave" Content="SAVE" Width="100"/>
                        <Button x:Name="btnRefresh" Content="REFRESH" Width="100"/>

                        <TextBox>
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Width" Value="100"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid Width="{TemplateBinding Width}">
                                                    <TextBox x:Name="Tb"
                                                                Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                                VerticalContentAlignment="Center"
                                                                BorderThickness="0"
                                                                Background="{StaticResource brushBackgroundTopPanel}"
                                                                Foreground="{StaticResource brushSelected}"
                                                                FontWeight="Bold"
                                                                />
                                                    <TextBlock x:Name="UserMessage"
                                                                    VerticalAlignment="Center"
                                                                    Margin="5,0"
                                                                    Text="SEARCH..."
                                                                    IsHitTestVisible="False"
                                                                    FontWeight="Bold"
                                                                    Foreground="{StaticResource brushForegroundTopPanel}"
                                                                    Visibility="Hidden" TextAlignment="Center"
                                                                       />
                                                    <Border x:Name="Brd"
                                                                BorderThickness="0,0,0,1"
                                                                BorderBrush="{StaticResource brushSelected}"
                                                                Margin="0,0,0,10"
                                                                />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="TextBox.Text" Value=""/>
                                                            <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Visibility" TargetName="UserMessage" Value="Visible"/>
                                                        <Setter TargetName="Brd" Property="BorderBrush" Value="Transparent"/>

                                                        <MultiTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                                                            To="100"
                                                                                            Duration="0:0:0:0.5">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <SineEase EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </MultiTrigger.EnterActions>
                                                        <MultiTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                                                            To="300"
                                                                                            Duration="0:0:0:0.2">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <SineEase EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </MultiTrigger.ExitActions>
                                                    </MultiTrigger>

                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="UserMessage" Property="Foreground" Value="{StaticResource brushButtonMouseOver}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                    </StackPanel>
                </Border>

            </Grid>

            <Border Visibility="Collapsed" x:Name="BottomPanel" DockPanel.Dock="Bottom" Height="30" BorderBrush="{StaticResource brushBorders}" BorderThickness="0,1,0,0"/>

            <Grid>
                <Image x:Name="Background"
                           Stretch="UniformToFill"
                           Source="Images/backgrounds/background.jpg">
                    <Image.OpacityMask>
                        <SolidColorBrush Color="WhiteSmoke" Opacity="0.1"/>
                    </Image.OpacityMask>
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    From="0,0,0,0"
                                    To="-100,-100,-100,-100"
                                    Duration="0:0:20"
                                    RepeatBehavior="Forever"
                                    AutoReverse="True">
                                        <ThicknessAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="200"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="3*" MinWidth="200"/>
                    </Grid.ColumnDefinitions>

                    <TreeView x:Name="tvContainers"
                              Grid.Column="0"
                              PreviewKeyDown="tvContainers_PreviewKeyDown"
                              >
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <HierarchicalDataTemplate.Resources>
                                    <local:LeftMarginMultiplierConverter Length="20" x:Key="lengthConverter" />
                                </HierarchicalDataTemplate.Resources>

                                <StackPanel
                                        Height="30"
                                        Orientation="Horizontal">

                                    <Image SnapsToDevicePixels="True" Height="16" Width="16" Source="Images/Containers/folder_16x16.png"/>
                                    <TextBlock Text="{Binding Name}" FontSize="12" VerticalAlignment="Center" Margin="5,0"/>
                                </StackPanel>

                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>

                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="AddContainer" Header="ADD..." Click="MenuItem_Click"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>

                    <Border Grid.Column="1" BorderBrush="{StaticResource brushBorders}" BorderThickness="1,0"/>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="Transparent"/>

                    <ListView Name="listview" Grid.Column="2" BorderThickness="0" Background="Transparent" ItemsSource="{Binding ElementName=tvContainers, Path=SelectedItem.Hosts}">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="CREATE..."/>
                                <MenuItem Header="REFRESH"/>
                                <MenuItem Header="PING ALL"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding IP}"          Header="IP" Width="150"/>
                                <GridViewColumn DisplayMemberBinding="{Binding DNS_Name}"    Header="DNS Name" Width="150"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Description}" Header="Description" Width="300"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
